==================== Test output for //:echo2_integration_test:
[2019-07-27 04:21:13.551][1665][warning][testing] [external/envoy/test/test_common/environment.cc:175] Testing with IPv6 addresses may not be supported on this machine. If testing fails, set the environment variable ENVOY_IP_TEST_VERSIONS.
[==========] Running 2 tests from 1 test suite.
[----------] Global test environment set-up.
[----------] 2 tests from IpVersions/Echo2IntegrationTest
[ RUN      ] IpVersions/Echo2IntegrationTest.Echo/0
[       OK ] IpVersions/Echo2IntegrationTest.Echo/0 (405 ms)
[ RUN      ] IpVersions/Echo2IntegrationTest.Echo/1
[2019-07-27 04:21:14.145][1678][critical][main] [external/envoy/source/server/server.cc:92] error initializing configuration '/build/tmp/_bazel_bazel/400406edc57d332f0b9b805d2b8e33a1/sandbox/processwrapper-sandbox/2/execroot/envoy_filter_example/_tmp/49e9611d4927f260e2c8add04ebca3d2/bootstrap.json': cannot bind '[::1]:0': Cannot assign requested address
terminate called after throwing an instance of 'Envoy::Network::SocketBindException'
  what():  cannot bind '[::1]:0': Cannot assign requested address
[2019-07-27 04:21:14.146][1678][critical][backtrace] [bazel-out/k8-dbg/bin/external/envoy/source/server/_virtual_includes/backtrace_lib/server/backtrace.h:81] Caught Aborted, suspect faulting address 0x3e800000681
[2019-07-27 04:21:14.146][1678][critical][backtrace] [bazel-out/k8-dbg/bin/external/envoy/source/server/_virtual_includes/backtrace_lib/server/backtrace.h:69] Backtrace (use tools/stack_decode.py to get line numbers):
[2019-07-27 04:21:14.209][1678][critical][backtrace] [bazel-out/k8-dbg/bin/external/envoy/source/server/_virtual_includes/backtrace_lib/server/backtrace.h:73] #0: Envoy::SignalAction::sigHandler() [0x4161807]
[2019-07-27 04:21:14.265][1678][critical][backtrace] [bazel-out/k8-dbg/bin/external/envoy/source/server/_virtual_includes/backtrace_lib/server/backtrace.h:73] #1: __tsan::CallUserSignalHandler() [0x1537e74]
external/bazel_tools/tools/test/test-setup.sh: line 310:  1665 Aborted                 "${TEST_PATH}" "$@" 2>&1
================================================================================
==================== Test output for //:envoy_binary_test:

USAGE: 

   envoy  [--use-libevent-buffers <bool>] [--cpuset-threads]
          [--enable-mutex-tracing] [--disable-hot-restart]
          [--max-obj-name-len <uint64_t>] [--max-stats <uint64_t>] [--mode
          <string>] [--parent-shutdown-time-s <uint32_t>] [--drain-time-s
          <uint32_t>] [--file-flush-interval-msec <uint32_t>]
          [--service-zone <string>] [--service-node <string>]
          [--service-cluster <string>] [--hot-restart-version]
          [--restart-epoch <uint32_t>] [--log-path <string>] [--log-format
          <string>] [--component-log-level <string>] [-l <string>]
          [--local-address-ip-version <string>] [--admin-address-path
          <string>] [--allow-unknown-fields] [--config-yaml <string>] [-c
          <string>] [--concurrency <uint32_t>] [--base-id <uint32_t>] [--]
          [--version] [-h]


Where: 

   --use-libevent-buffers <bool>
     Use the original libevent buffer implementation

   --cpuset-threads
     Get the default # of worker threads from cpuset size

   --enable-mutex-tracing
     Enable mutex contention tracing functionality

   --disable-hot-restart
     Disable hot restart functionality

   --max-obj-name-len <uint64_t>
     Deprecated and unused; please do not specify.

   --max-stats <uint64_t>
     Deprecated and unused; please do not specify.

   --mode <string>
     One of 'serve' (default; validate configs and then serve traffic
     normally) or 'validate' (validate configs and exit).

   --parent-shutdown-time-s <uint32_t>
     Hot restart parent shutdown time in seconds

   --drain-time-s <uint32_t>
     Hot restart drain time in seconds

   --file-flush-interval-msec <uint32_t>
     Interval for log flushing in msec

   --service-zone <string>
     Zone name

   --service-node <string>
     Node name

   --service-cluster <string>
     Cluster name

   --hot-restart-version
     hot restart compatibility version

   --restart-epoch <uint32_t>
     hot restart epoch #

   --log-path <string>
     Path to logfile

   --log-format <string>
     Log message format in spdlog syntax (see
     https://github.com/gabime/spdlog/wiki/3.-Custom-formatting)

     Default is "[%Y-%m-%d %T.%e][%t][%l][%n] %v"

   --component-log-level <string>
     Comma separated list of component log levels. For example
     upstream:debug,config:trace

   -l <string>,  --log-level <string>
     Log levels:
     [trace][debug][info][warning][error][critical][off]

     Default is [info]

   --local-address-ip-version <string>
     The local IP address version (v4 or v6).

   --admin-address-path <string>
     Admin address path

   --allow-unknown-fields
     allow unknown fields in the configuration

   --config-yaml <string>
     Inline YAML configuration, merges with the contents of --config-path

   -c <string>,  --config-path <string>
     Path to configuration file

   --concurrency <uint32_t>
     # of worker threads to run

   --base-id <uint32_t>
     base ID so that multiple envoys can run on the same host if needed

   --,  --ignore_rest
     Ignores the rest of the labeled arguments following this flag.

   --version
     Displays version information and exits.

   -h,  --help
     Displays usage information and exits.


   envoy

PASS
================================================================================
//:envoy_binary_test                                                     [0m[32mPASSED[0m in 0.2s
//:echo2_integration_test                                                [0m[31m[1mFAILED[0m in 0.9s
  /build/tmp/_bazel_bazel/400406edc57d332f0b9b805d2b8e33a1/execroot/envoy_filter_example/bazel-out/k8-dbg/testlogs/echo2_integration_test/test.log

Executed 2 out of 2 tests: 1 test passes and [0m[31m[1m1 fails locally[0m.
There were tests whose specified size is too big. Use the --test_verbose_timeout_warnings command line option to see which ones these are.
